-- LockSupport

channel park: MonitorID.ThreadID
channel wakeUp: MonitorID.ThreadID.Bool
channel unpark: MonitorID.ThreadID.ThreadID

LockSupport0 :: (MonitorID) -> Proc
LockSupport0(m) = LockSupport(m, {}, {})
LockSupport1(m, waiting, permits) =
  park.m?t-> (--:diff(ThreadID, waiting) -> (
    if member(t, permits)
      then wakeUp.m.t.true -> LockSupport(m, waiting, diff(permits, {t}))
    else LockSupport(m, union(waiting, {t}), permits) )
  []
  unpark.m?t?t2-> ( --):diff(ThreadID, waiting)?t2:waiting -> (
    if member(t2, waiting)
      then wakeUp.m.t2.true -> LockSupport(m, diff(waiting, {t2}), permits)
    else LockSupport(m, waiting, union(permits, {t2})))
LockSupport(m, waiting, permits) =
  if waiting == {} then LockSupport1(m, waiting, permits)
  else (LockSupport1(m, waiting, permits)
        |~| wakeUp.m$t:waiting!false -> LockSupport(m, diff(waiting, {t}), permits) )

InitLockSupp(m) = LockSupport0(m)

LockSupportDet0 :: (MonitorID) -> Proc
LockSupportDet0(m) = LockSupportDet(m, {}, {})
LockSupportDet1(m, waiting, permits) =
  park.m?t-> (--:diff(ThreadID, waiting) -> (
    if member(t, permits)
      then wakeUp.m.t.true -> LockSupportDet(m, waiting, diff(permits, {t}))
    else LockSupportDet(m, union(waiting, {t}), permits) )
  []
  unpark.m?t?t2-> ( --):diff(ThreadID, waiting)?t2:waiting -> (
    if member(t2, waiting)
      then wakeUp.m.t2.true -> LockSupportDet(m, diff(waiting, {t2}), permits)
    else LockSupportDet(m, waiting, union(permits, {t2})))
LockSupportDet(m, waiting, permits) =LockSupportDet1(m, waiting, permits)

InitLockSuppDet(m) = LockSupportDet0(m)

Park(m, t) = park.m.t -> wakeUp.m.t?_ ->  SKIP

Unpark(m, t, t') = unpark.m.t.t' -> SKIP